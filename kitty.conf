# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

#: kitty has very powerful font management. You can configure
#: individual font faces and even specify special fonts for particular
#: characters.

font_family      JetBrains Mono
# bold_font        auto
# italic_font      auto
# bold_italic_font auto

#: You can specify different fonts for the bold/italic/bold-italic
#: variants. To get a full list of supported fonts use the `kitty
#: +list-fonts` command. By default they are derived automatically, by
#: the OSes font system. When bold_font or bold_italic_font is set to
#: auto on macOS, the priority of bold fonts is semi-bold, bold,
#: heavy. Setting them manually is useful for font families that have
#: many weight variants like Book, Medium, Thick, etc. For example::

#:     font_family      Operator Mono Book
#:     bold_font        Operator Mono Medium
#:     italic_font      Operator Mono Book Italic
#:     bold_italic_font Operator Mono Medium Italic

font_size 12.0

#: Font size (in pts)

#: }}}

#: Cursor customization {{{

cursor #B084EB

#: Default cursor color. If set to the special value none the cursor
#: will be rendered with a "reverse video" effect. It's color will be
#: the color of the text in the cell it is over and the text will be
#: rendered with the background color of the cell. Note that if the
#: program running in the terminal sets a cursor color, this takes
#: precedence. Also, the cursor colors are modified if the cell
#: background and foreground colors have very low contrast.

#: }}}

#: Window layout {{{

# remember_window_size  yes
# initial_window_width  640
# initial_window_height 400

#: If enabled, the OS Window size will be remembered so that new
#: instances of kitty will have the same size as the previous
#: instance. If disabled, the OS Window will initially have size
#: configured by initial_window_width/height, in pixels. You can use a
#: suffix of "c" on the width/height values to have them interpreted
#: as number of cells instead of pixels.

# enabled_layouts *

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the layouts <https://sw.kovidgoyal.net/kitty/overview/#layouts>.

# window_resize_step_cells 2
# window_resize_step_lines 2

#: The step size (in units of cell width/cell height) to use when
#: resizing kitty windows in a layout with the shortcut
#: start_resizing_window. The cells value is used for horizontal
#: resizing, and the lines value is used for vertical resizing.

# window_border_width 0.5pt

#: The width of window borders. Can be either in pixels (px) or pts
#: (pt). Values in pts will be rounded to the nearest number of pixels
#: based on screen resolution. If not specified, the unit is assumed
#: to be pts. Note that borders are displayed only when more than one
#: window is visible. They are meant to separate multiple windows.

# draw_minimal_borders yes

#: Draw only the minimum borders needed. This means that only the
#: borders that separate the window from a neighbor are drawn. Note
#: that setting a non-zero window_margin_width overrides this and
#: causes all borders to be drawn.

window_margin_width 2

#: The window margin (in pts) (blank area outside the border). A
#: single value sets all four sides. Two values set the vertical and
#: horizontal sides. Three values set top, horizontal and bottom. Four
#: values set top, right, bottom and left.

# single_window_margin_width -1

#: The window margin to use when only a single window is visible (in
#: pts). Negative values will cause the value of window_margin_width
#: to be used instead. A single value sets all four sides. Two values
#: set the vertical and horizontal sides. Three values set top,
#: horizontal and bottom. Four values set top, right, bottom and left.

window_padding_width 2

#: The window padding (in pts) (blank area between the text and the
#: window border). A single value sets all four sides. Two values set
#: the vertical and horizontal sides. Three values set top, horizontal
#: and bottom. Four values set top, right, bottom and left.

# single_window_padding_width -1

#: The window padding to use when only a single window is visible (in
#: pts). Negative values will cause the value of window_padding_width
#: to be used instead. A single value sets all four sides. Two values
#: set the vertical and horizontal sides. Three values set top,
#: horizontal and bottom. Four values set top, right, bottom and left.

# placement_strategy center

#: When the window size is not an exact multiple of the cell size, the
#: cell area of the terminal window will have some extra padding on
#: the sides. You can control how that padding is distributed with
#: this option. Using a value of center means the cell area will be
#: placed centrally. A value of top-left means the padding will be
#: only at the bottom and right edges.

active_border_color #B084EB

#: The color for the border of the active window. Set this to none to
#: not draw borders around the active window.

inactive_border_color #BBBBBB

#: The color for the border of inactive windows.

# bell_border_color #ff5a00

#: The color for the border of inactive windows in which a bell has
#: occurred.

# inactive_text_alpha 1.0

#: Fade the text in inactive windows by the specified amount (a number
#: between zero and one, with zero being fully faded).

hide_window_decorations yes

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only and titlebar-and-corners can be used
#: to only hide the titlebar and the rounded corners. Whether this
#: works and exactly what effect it has depends on the window
#: manager/operating system. Note that the effects of changing this
#: option when reloading config are undefined. When using titlebar-
#: only, it is useful to also set window_margin_width and
#: placement_strategy to prevent the rounded corners from clipping
#: text. Or use titlebar-and-corners.

# window_logo_path none

#: Path to a logo image. Must be in PNG format. Relative paths are
#: interpreted relative to the kitty config directory. The logo is
#: displayed in a corner of every kitty window. The position is
#: controlled by window_logo_position. Individual windows can be
#: configured to have different logos either using the launch action
#: or the remote control <https://sw.kovidgoyal.net/kitty/remote-
#: control/> facility.

# window_logo_position bottom-right

#: Where to position the window logo in the window. The value can be
#: one of: top-left, top, top-right, left, center, right, bottom-left,
#: bottom, bottom-right.

# window_logo_alpha 0.5

#: The amount the logo should be faded into the background. With zero
#: being fully faded and one being fully opaque.

# resize_debounce_time 0.1 0.5

#: The time to wait before redrawing the screen during a live resize
#: of the OS window, when no new resize events have been received,
#: i.e. when resizing is either paused or finished. On platforms such
#: as macOS, where the operating system sends events corresponding to
#: the start and end of a live resize, the second number is used for
#: redraw-after-pause since kitty can distinguish between a pause and
#: end of resizing.  On such systems the first number is ignored and
#: redraw is immediate after end of resize.  On other systems the
#: first number is used so that kitty is "ready" quickly after the end
#: of resizing, while not also continuously redrawing, to save energy.

# resize_in_steps no

#: Resize the OS window in steps as large as the cells, instead of
#: with the usual pixel accuracy. Combined with initial_window_width
#: and initial_window_height in number of cells, this option can be
#: used to keep the margins as small as possible when resizing the OS
#: window. Note that this does not currently work on Wayland.

# visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

#: The list of characters for visual window selection. For example,
#: for selecting a window to focus on with focus_visible_window. The
#: value should be a series of unique numbers or alphabets, case
#: insensitive, from the set 0-9A-Z\-=[];',./\\`. Specify your
#: preference as a string of characters.

# confirm_os_window_close -1

#: Ask for confirmation when closing an OS window or a tab with at
#: least this number of kitty windows in it by window manager (e.g.
#: clicking the window close button or pressing the operating system
#: shortcut to close windows) or by the close_tab action. A value of
#: zero disables confirmation. This confirmation also applies to
#: requests to quit the entire application (all OS windows, via the
#: quit action). Negative values are converted to positive ones,
#: however, with shell_integration enabled, using negative values
#: means windows sitting at a shell prompt are not counted, only
#: windows where some command is currently running. Note that if you
#: want confirmation when closing individual windows, you can map the
#: close_window_with_confirmation action.

#: }}}

#: Color scheme {{{

foreground #cdcdcd
background #000000

#: The foreground and background colors.

background_opacity 0.95

#: The opacity of the background. A number between zero and one, where
#: one is opaque and zero is fully transparent. This will only work if
#: supported by the OS (for instance, when using a compositor under
#: X11). Note that it only sets the background color's opacity in
#: cells that have the same background color as the default terminal
#: background, so that things like the status bar in vim, powerline
#: prompts, etc. still look good. But it means that if you use a color
#: theme with a background color in your editor, it will not be
#: rendered as transparent. Instead you should change the default
#: background color in your kitty config and not use a background
#: color in the editor color scheme. Or use the escape codes to set
#: the terminals default colors in a shell script to launch your
#: editor. Be aware that using a value less than 1.0 is a (possibly
#: significant) performance hit. When using a low value for this
#: setting, it is desirable that you set the background color to a
#: color the matches the general color of the desktop background, for
#: best text rendering.  If you want to dynamically change
#: transparency of windows, set dynamic_background_opacity to yes
#: (this is off by default as it has a performance cost). Changing
#: this option when reloading the config will only work if
#: dynamic_background_opacity was enabled in the original config.

# background_blur 0

#: Set to a positive value to enable background blur (blurring of the
#: visuals behind a transparent window) on platforms that support it.
#: Only takes effect when background_opacity is less than one. On
#: macOS, this will also control the blur radius (amount of blurring).
#: Setting it to too high a value will cause severe performance issues
#: and/or rendering artifacts. Usually, values up to 64 work well.
#: Note that this might cause performance issues, depending on how the
#: platform implements it, so use with care. Currently supported on
#: macOS and KDE under X11.

# background_image none

#: Path to a background image. Must be in PNG format.

# background_image_layout tiled

#: Whether to tile, scale or clamp the background image. The value can
#: be one of tiled, mirror-tiled, scaled, clamped, centered or
#: cscaled. The scaled and cscaled values scale the image to the
#: window size, with cscaled preserving the image aspect ratio.

# background_image_linear no

#: When background image is scaled, whether linear interpolation
#: should be used.

# dynamic_background_opacity no

#: Allow changing of the background_opacity dynamically, using either
#: keyboard shortcuts (increase_background_opacity and
#: decrease_background_opacity) or the remote control facility.
#: Changing this option by reloading the config is not supported.

# background_tint 0.0

#: How much to tint the background image by the background color. This
#: option makes it easier to read the text. Tinting is done using the
#: current background color for each window. This option applies only
#: if background_opacity is set and transparent windows are supported
#: or background_image is set.

# background_tint_gaps 1.0

#: How much to tint the background image at the window gaps by the
#: background color, after applying background_tint. Since this is
#: multiplicative with background_tint, it can be used to lighten the
#: tint over the window gaps for a *separated* look.

# dim_opacity 0.4

#: How much to dim text that has the DIM/FAINT attribute set. One
#: means no dimming and zero means fully dimmed (i.e. invisible).

# selection_foreground #000000
# selection_background #fffacd

#: The foreground and background colors for text selected with the
#: mouse. Setting both of these to none will cause a "reverse video"
#: effect for selections, where the selection will be the cell text
#: color and the text will become the cell background color. Setting
#: only selection_foreground to none will cause the foreground color
#: to be used unchanged. Note that these colors can be overridden by
#: the program running in the terminal.

#: The color table {{{

#: The 256 terminal colors. There are 8 basic colors, each color has a
#: dull and bright version, for the first 16 colors. You can set the
#: remaining 240 colors as color16 to color255.

color0 #2a2c2d
color8 #373B41

#: black

color1 #FF2C6D
color9 #FF4B82

#: red

color2  #19f9d8
color10 #6FE7D2

#: green

color3  #FFB86C
color11 #FFCC95

#: yellow

color4  #45A9F9
color12 #6FC1FF

#: blue

color5  #FF75B5
color13 #FF9AC1

#: magenta

color6  #B084EB
color14 #BCAAFE

#: cyan

color7  #BBBBBB
color15 #E6E6E6

#: white

# mark1_foreground black

#: Color for marks of type 1

# mark1_background #98d3cb

#: Color for marks of type 1 (light steel blue)

# mark2_foreground black

#: Color for marks of type 2

# mark2_background #f2dcd3

#: Color for marks of type 1 (beige)

# mark3_foreground black

#: Color for marks of type 3

# mark3_background #f274bc

#: Color for marks of type 3 (violet)

#: }}}

#: }}}
